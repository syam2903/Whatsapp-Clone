{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MERN\\\\whatsapp-clone\\\\frontend\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nlet socket;\nfunction Chat() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState('6801074ef31ef9ff7de2cdb6'); // Pre-filled sample chat room\n  const [participants, setParticipants] = useState([]);\n  const [userMap, setUserMap] = useState({}); // Map userId to { name, email }\n\n  useEffect(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (!userInfo) {\n      navigate('/');\n      return;\n    }\n    setUser(JSON.parse(userInfo));\n    socket = io(SOCKET_URL);\n    // Fetch chat participants\n    if (chatId) {\n      fetch(`${API_URL}/chats/${chatId}`).then(res => res.json()).then(data => {\n        if (data.participants) {\n          setParticipants(data.participants);\n          // Build userId -> user map for fast lookup\n          const map = {};\n          data.participants.forEach(u => {\n            map[u._id] = u;\n          });\n          setUserMap(map);\n        }\n      });\n      socket.emit('join_chat', chatId);\n    }\n    socket.on('receive_message', msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      if (socket) socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [chatId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!message || !chatId) return;\n    const msgData = {\n      chatId,\n      sender: user._id,\n      content: message,\n      type: 'text'\n    };\n    socket.emit('send_message', msgData);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Chat ID to join\",\n      value: chatId,\n      onChange: e => setChatId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participants\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Participants:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), participants.map(p => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: 8\n        },\n        children: [p.name, \" (\", p.email, \")\"]\n      }, p._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, idx) => {\n        var _userMap$msg$sender;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sender === user._id ? 'my-message' : 'other-message',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [((_userMap$msg$sender = userMap[msg.sender]) === null || _userMap$msg$sender === void 0 ? void 0 : _userMap$msg$sender.name) || msg.sender, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"YuSY8KEDb5ajQz9I0cS0aez57LY=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","io","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SOCKET_URL","REACT_APP_SOCKET_URL","socket","Chat","_s","navigate","user","setUser","message","setMessage","messages","setMessages","chatId","setChatId","participants","setParticipants","userMap","setUserMap","userInfo","localStorage","getItem","JSON","parse","fetch","then","res","json","data","map","forEach","u","_id","emit","on","msg","prev","disconnect","sendMessage","e","preventDefault","msgData","sender","content","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","p","style","marginLeft","name","email","idx","_userMap$msg$sender","fontWeight","onSubmit","_c","$RefreshReg$"],"sources":["D:/Projects/MERN/whatsapp-clone/frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nlet socket;\n\nfunction Chat() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState('6801074ef31ef9ff7de2cdb6'); // Pre-filled sample chat room\n  const [participants, setParticipants] = useState([]);\n  const [userMap, setUserMap] = useState({}); // Map userId to { name, email }\n\n  useEffect(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (!userInfo) {\n      navigate('/');\n      return;\n    }\n    setUser(JSON.parse(userInfo));\n    socket = io(SOCKET_URL);\n    // Fetch chat participants\n    if (chatId) {\n      fetch(`${API_URL}/chats/${chatId}`)\n        .then(res => res.json())\n        .then(data => {\n          if (data.participants) {\n            setParticipants(data.participants);\n            // Build userId -> user map for fast lookup\n            const map = {};\n            data.participants.forEach(u => { map[u._id] = u; });\n            setUserMap(map);\n          }\n        });\n      socket.emit('join_chat', chatId);\n    }\n    socket.on('receive_message', (msg) => {\n      setMessages((prev) => [...prev, msg]);\n    });\n    return () => {\n      if (socket) socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [chatId]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!message || !chatId) return;\n    const msgData = {\n      chatId,\n      sender: user._id,\n      content: message,\n      type: 'text',\n    };\n    socket.emit('send_message', msgData);\n    setMessage('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2>Chat Room</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Chat ID to join\"\n        value={chatId}\n        onChange={e => setChatId(e.target.value)}\n      />\n      {/* Display participants */}\n      <div className=\"participants\">\n        <strong>Participants:</strong>\n        {participants.map(p => (\n          <span key={p._id} style={{marginLeft: 8}}>\n            {p.name} ({p.email})\n          </span>\n        ))}\n      </div>\n      <div className=\"messages\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.sender === user._id ? 'my-message' : 'other-message'}>\n            <span style={{fontWeight:'bold'}}>{userMap[msg.sender]?.name || msg.sender}: </span>\n            <span>{msg.content}</span>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAC5E,MAAMC,UAAU,GAAGH,OAAO,CAACC,GAAG,CAACG,oBAAoB,IAAI,uBAAuB;AAC9E,IAAIC,MAAM;AAEV,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,0BAA0B,CAAC,CAAC,CAAC;EAClE,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAM4B,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAACF,QAAQ,EAAE;MACbb,QAAQ,CAAC,GAAG,CAAC;MACb;IACF;IACAE,OAAO,CAACc,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC;IAC7BhB,MAAM,GAAGT,EAAE,CAACO,UAAU,CAAC;IACvB;IACA,IAAIY,MAAM,EAAE;MACVW,KAAK,CAAC,GAAG3B,OAAO,UAAUgB,MAAM,EAAE,CAAC,CAChCY,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACZ,IAAIA,IAAI,CAACb,YAAY,EAAE;UACrBC,eAAe,CAACY,IAAI,CAACb,YAAY,CAAC;UAClC;UACA,MAAMc,GAAG,GAAG,CAAC,CAAC;UACdD,IAAI,CAACb,YAAY,CAACe,OAAO,CAACC,CAAC,IAAI;YAAEF,GAAG,CAACE,CAAC,CAACC,GAAG,CAAC,GAAGD,CAAC;UAAE,CAAC,CAAC;UACnDb,UAAU,CAACW,GAAG,CAAC;QACjB;MACF,CAAC,CAAC;MACJ1B,MAAM,CAAC8B,IAAI,CAAC,WAAW,EAAEpB,MAAM,CAAC;IAClC;IACAV,MAAM,CAAC+B,EAAE,CAAC,iBAAiB,EAAGC,GAAG,IAAK;MACpCvB,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IACF,OAAO,MAAM;MACX,IAAIhC,MAAM,EAAEA,MAAM,CAACkC,UAAU,CAAC,CAAC;IACjC,CAAC;IACD;EACF,CAAC,EAAE,CAACxB,MAAM,CAAC,CAAC;EAEZ,MAAMyB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC/B,OAAO,IAAI,CAACI,MAAM,EAAE;IACzB,MAAM4B,OAAO,GAAG;MACd5B,MAAM;MACN6B,MAAM,EAAEnC,IAAI,CAACyB,GAAG;MAChBW,OAAO,EAAElC,OAAO;MAChBmC,IAAI,EAAE;IACR,CAAC;IACDzC,MAAM,CAAC8B,IAAI,CAAC,cAAc,EAAEQ,OAAO,CAAC;IACpC/B,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEd,OAAA;IAAKiD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlD,OAAA;MAAAkD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtD,OAAA;MACEgD,IAAI,EAAC,MAAM;MACXO,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAEvC,MAAO;MACdwC,QAAQ,EAAEd,CAAC,IAAIzB,SAAS,CAACyB,CAAC,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eAEFtD,OAAA;MAAKiD,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlD,OAAA;QAAAkD,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7BnC,YAAY,CAACc,GAAG,CAAC0B,CAAC,iBACjB3D,OAAA;QAAkB4D,KAAK,EAAE;UAACC,UAAU,EAAE;QAAC,CAAE;QAAAX,QAAA,GACtCS,CAAC,CAACG,IAAI,EAAC,IAAE,EAACH,CAAC,CAACI,KAAK,EAAC,GACrB;MAAA,GAFWJ,CAAC,CAACvB,GAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtD,OAAA;MAAKiD,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBnC,QAAQ,CAACkB,GAAG,CAAC,CAACM,GAAG,EAAEyB,GAAG;QAAA,IAAAC,mBAAA;QAAA,oBACrBjE,OAAA;UAAeiD,SAAS,EAAEV,GAAG,CAACO,MAAM,KAAKnC,IAAI,CAACyB,GAAG,GAAG,YAAY,GAAG,eAAgB;UAAAc,QAAA,gBACjFlD,OAAA;YAAM4D,KAAK,EAAE;cAACM,UAAU,EAAC;YAAM,CAAE;YAAAhB,QAAA,GAAE,EAAAe,mBAAA,GAAA5C,OAAO,CAACkB,GAAG,CAACO,MAAM,CAAC,cAAAmB,mBAAA,uBAAnBA,mBAAA,CAAqBH,IAAI,KAAIvB,GAAG,CAACO,MAAM,EAAC,IAAE;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpFtD,OAAA;YAAAkD,QAAA,EAAOX,GAAG,CAACQ;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAFlBU,GAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtD,OAAA;MAAMmE,QAAQ,EAAEzB,WAAY;MAAAQ,QAAA,gBAC1BlD,OAAA;QACEgD,IAAI,EAAC,MAAM;QACXO,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAE3C,OAAQ;QACf4C,QAAQ,EAAEd,CAAC,IAAI7B,UAAU,CAAC6B,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFtD,OAAA;QAAQgD,IAAI,EAAC,QAAQ;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC7C,EAAA,CA3FQD,IAAI;EAAA,QACMX,WAAW;AAAA;AAAAuE,EAAA,GADrB5D,IAAI;AA6Fb,eAAeA,IAAI;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}