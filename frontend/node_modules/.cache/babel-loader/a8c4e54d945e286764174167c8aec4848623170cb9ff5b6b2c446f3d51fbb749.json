{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MERN\\\\whatsapp-clone\\\\frontend\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nlet socket;\nfunction Chat() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(''); // For demo, set manually or via UI\n\n  useEffect(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (!userInfo) {\n      navigate('/');\n      return;\n    }\n    setUser(JSON.parse(userInfo));\n    socket = io(SOCKET_URL);\n    // For demo, join a chat (hardcoded chatId or ask user)\n    if (chatId) {\n      socket.emit('join_chat', chatId);\n    }\n    socket.on('receive_message', msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      if (socket) socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [chatId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!message || !chatId) return;\n    const msgData = {\n      chatId,\n      sender: user._id,\n      content: message,\n      type: 'text'\n    };\n    socket.emit('send_message', msgData);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Chat ID to join\",\n      value: chatId,\n      onChange: e => setChatId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === user._id ? 'my-message' : 'other-message',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"6PkGk+Lv1Rx+PLS+sVdcWm3RSP0=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","io","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SOCKET_URL","REACT_APP_SOCKET_URL","socket","Chat","_s","navigate","user","setUser","message","setMessage","messages","setMessages","chatId","setChatId","userInfo","localStorage","getItem","JSON","parse","emit","on","msg","prev","disconnect","sendMessage","e","preventDefault","msgData","sender","_id","content","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","idx","onSubmit","_c","$RefreshReg$"],"sources":["D:/Projects/MERN/whatsapp-clone/frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nlet socket;\n\nfunction Chat() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatId, setChatId] = useState(''); // For demo, set manually or via UI\n\n  useEffect(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (!userInfo) {\n      navigate('/');\n      return;\n    }\n    setUser(JSON.parse(userInfo));\n    socket = io(SOCKET_URL);\n    // For demo, join a chat (hardcoded chatId or ask user)\n    if (chatId) {\n      socket.emit('join_chat', chatId);\n    }\n    socket.on('receive_message', (msg) => {\n      setMessages((prev) => [...prev, msg]);\n    });\n    return () => {\n      if (socket) socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [chatId]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!message || !chatId) return;\n    const msgData = {\n      chatId,\n      sender: user._id,\n      content: message,\n      type: 'text',\n    };\n    socket.emit('send_message', msgData);\n    setMessage('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2>Chat Room</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Chat ID to join\"\n        value={chatId}\n        onChange={e => setChatId(e.target.value)}\n      />\n      <div className=\"messages\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.sender === user._id ? 'my-message' : 'other-message'}>\n            <span>{msg.content}</span>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}